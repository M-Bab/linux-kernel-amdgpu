/* Copyright 2012-15 Advanced Micro Devices, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 *
 * Authors: AMD
 *
 */

#ifndef __DAL_TRANSFORM_DCE110_H__
#define __DAL_TRANSFORM_DCE110_H__

#include "transform.h"

#define TO_DCE110_TRANSFORM(transform)\
	container_of(transform, struct dce110_transform, base)

#define LB_TOTAL_NUMBER_OF_ENTRIES 1712
#define LB_BITS_PER_ENTRY 144

#define XFM_COMMON_REG_LIST_DCE_BASE(id) \
	SRI(LB_DATA_FORMAT, LB, id), \
	SRI(GAMUT_REMAP_CONTROL, DCP, id), \
	SRI(GAMUT_REMAP_C11_C12, DCP, id), \
	SRI(GAMUT_REMAP_C13_C14, DCP, id), \
	SRI(GAMUT_REMAP_C21_C22, DCP, id), \
	SRI(GAMUT_REMAP_C23_C24, DCP, id), \
	SRI(GAMUT_REMAP_C31_C32, DCP, id), \
	SRI(GAMUT_REMAP_C33_C34, DCP, id), \
	SRI(DENORM_CONTROL, DCP, id), \
	SRI(DCP_SPATIAL_DITHER_CNTL, DCP, id), \
	SRI(OUT_ROUND_CONTROL, DCP, id), \
	SRI(OUT_CLAMP_CONTROL_R_CR, DCP, id), \
	SRI(OUT_CLAMP_CONTROL_G_Y, DCP, id), \
	SRI(OUT_CLAMP_CONTROL_B_CB, DCP, id), \
	SRI(SCL_MODE, SCL, id), \
	SRI(SCL_TAP_CONTROL, SCL, id), \
	SRI(SCL_CONTROL, SCL, id), \
	SRI(EXT_OVERSCAN_LEFT_RIGHT, SCL, id), \
	SRI(EXT_OVERSCAN_TOP_BOTTOM, SCL, id), \
	SRI(SCL_VERT_FILTER_CONTROL, SCL, id), \
	SRI(SCL_HORZ_FILTER_CONTROL, SCL, id), \
	SRI(SCL_COEF_RAM_SELECT, SCL, id), \
	SRI(SCL_COEF_RAM_TAP_DATA, SCL, id), \
	SRI(VIEWPORT_START, SCL, id), \
	SRI(VIEWPORT_SIZE, SCL, id), \
	SRI(SCL_HORZ_FILTER_SCALE_RATIO, SCL, id), \
	SRI(SCL_VERT_FILTER_SCALE_RATIO, SCL, id), \
	SRI(SCL_HORZ_FILTER_INIT, SCL, id), \
	SRI(SCL_VERT_FILTER_INIT, SCL, id), \
	SRI(SCL_AUTOMATIC_MODE_CONTROL, SCL, id), \
	SRI(LB_MEMORY_CTRL, LB, id), \
	SRI(SCL_UPDATE, SCL, id)

#define XFM_COMMON_REG_LIST_DCE100(id) \
	XFM_COMMON_REG_LIST_DCE_BASE(id), \
	SRI(DCFE_MEM_PWR_CTRL, CRTC, id), \
	SRI(DCFE_MEM_PWR_STATUS, CRTC, id)

#define XFM_COMMON_REG_LIST_DCE110(id) \
	XFM_COMMON_REG_LIST_DCE_BASE(id), \
	SRI(DCFE_MEM_PWR_CTRL, DCFE, id), \
	SRI(DCFE_MEM_PWR_STATUS, DCFE, id)

#define XFM_SF(reg_name, field_name, post_fix)\
	.field_name = reg_name ## __ ## field_name ## post_fix

#define XFM_COMMON_MASK_SH_LIST_DCE_COMMON_BASE(mask_sh) \
	XFM_SF(OUT_CLAMP_CONTROL_B_CB, OUT_CLAMP_MIN_B_CB, mask_sh), \
	XFM_SF(OUT_CLAMP_CONTROL_B_CB, OUT_CLAMP_MAX_B_CB, mask_sh), \
	XFM_SF(OUT_CLAMP_CONTROL_G_Y, OUT_CLAMP_MIN_G_Y, mask_sh), \
	XFM_SF(OUT_CLAMP_CONTROL_G_Y, OUT_CLAMP_MAX_G_Y, mask_sh), \
	XFM_SF(OUT_CLAMP_CONTROL_R_CR, OUT_CLAMP_MIN_R_CR, mask_sh), \
	XFM_SF(OUT_CLAMP_CONTROL_R_CR, OUT_CLAMP_MAX_R_CR, mask_sh), \
	XFM_SF(OUT_ROUND_CONTROL, OUT_ROUND_TRUNC_MODE, mask_sh), \
	XFM_SF(DCP_SPATIAL_DITHER_CNTL, DCP_SPATIAL_DITHER_EN, mask_sh), \
	XFM_SF(DCP_SPATIAL_DITHER_CNTL, DCP_SPATIAL_DITHER_MODE, mask_sh), \
	XFM_SF(DCP_SPATIAL_DITHER_CNTL, DCP_SPATIAL_DITHER_DEPTH, mask_sh), \
	XFM_SF(DCP_SPATIAL_DITHER_CNTL, DCP_FRAME_RANDOM_ENABLE, mask_sh), \
	XFM_SF(DCP_SPATIAL_DITHER_CNTL, DCP_RGB_RANDOM_ENABLE, mask_sh), \
	XFM_SF(DCP_SPATIAL_DITHER_CNTL, DCP_HIGHPASS_RANDOM_ENABLE, mask_sh), \
	XFM_SF(DENORM_CONTROL, DENORM_MODE, mask_sh), \
	XFM_SF(LB_DATA_FORMAT, PIXEL_DEPTH, mask_sh), \
	XFM_SF(LB_DATA_FORMAT, PIXEL_EXPAN_MODE, mask_sh), \
	XFM_SF(GAMUT_REMAP_C11_C12, GAMUT_REMAP_C11, mask_sh), \
	XFM_SF(GAMUT_REMAP_C11_C12, GAMUT_REMAP_C12, mask_sh), \
	XFM_SF(GAMUT_REMAP_C13_C14, GAMUT_REMAP_C13, mask_sh), \
	XFM_SF(GAMUT_REMAP_C13_C14, GAMUT_REMAP_C14, mask_sh), \
	XFM_SF(GAMUT_REMAP_C21_C22, GAMUT_REMAP_C21, mask_sh), \
	XFM_SF(GAMUT_REMAP_C21_C22, GAMUT_REMAP_C22, mask_sh), \
	XFM_SF(GAMUT_REMAP_C23_C24, GAMUT_REMAP_C23, mask_sh), \
	XFM_SF(GAMUT_REMAP_C23_C24, GAMUT_REMAP_C24, mask_sh), \
	XFM_SF(GAMUT_REMAP_C31_C32, GAMUT_REMAP_C31, mask_sh), \
	XFM_SF(GAMUT_REMAP_C31_C32, GAMUT_REMAP_C32, mask_sh), \
	XFM_SF(GAMUT_REMAP_C33_C34, GAMUT_REMAP_C33, mask_sh), \
	XFM_SF(GAMUT_REMAP_C33_C34, GAMUT_REMAP_C34, mask_sh), \
	XFM_SF(GAMUT_REMAP_CONTROL, GRPH_GAMUT_REMAP_MODE, mask_sh), \
	XFM_SF(SCL_MODE, SCL_MODE, mask_sh), \
	XFM_SF(SCL_TAP_CONTROL, SCL_H_NUM_OF_TAPS, mask_sh), \
	XFM_SF(SCL_TAP_CONTROL, SCL_V_NUM_OF_TAPS, mask_sh), \
	XFM_SF(SCL_CONTROL, SCL_BOUNDARY_MODE, mask_sh), \
	XFM_SF(EXT_OVERSCAN_LEFT_RIGHT, EXT_OVERSCAN_LEFT, mask_sh), \
	XFM_SF(EXT_OVERSCAN_LEFT_RIGHT, EXT_OVERSCAN_RIGHT, mask_sh), \
	XFM_SF(EXT_OVERSCAN_TOP_BOTTOM, EXT_OVERSCAN_TOP, mask_sh), \
	XFM_SF(EXT_OVERSCAN_TOP_BOTTOM, EXT_OVERSCAN_BOTTOM, mask_sh), \
	XFM_SF(SCL_COEF_RAM_SELECT, SCL_C_RAM_FILTER_TYPE, mask_sh), \
	XFM_SF(SCL_COEF_RAM_SELECT, SCL_C_RAM_PHASE, mask_sh), \
	XFM_SF(SCL_COEF_RAM_SELECT, SCL_C_RAM_TAP_PAIR_IDX, mask_sh), \
	XFM_SF(SCL_COEF_RAM_TAP_DATA, SCL_C_RAM_EVEN_TAP_COEF_EN, mask_sh), \
	XFM_SF(SCL_COEF_RAM_TAP_DATA, SCL_C_RAM_EVEN_TAP_COEF, mask_sh), \
	XFM_SF(SCL_COEF_RAM_TAP_DATA, SCL_C_RAM_ODD_TAP_COEF_EN, mask_sh), \
	XFM_SF(SCL_COEF_RAM_TAP_DATA, SCL_C_RAM_ODD_TAP_COEF, mask_sh), \
	XFM_SF(VIEWPORT_START, VIEWPORT_X_START, mask_sh), \
	XFM_SF(VIEWPORT_START, VIEWPORT_Y_START, mask_sh), \
	XFM_SF(VIEWPORT_SIZE, VIEWPORT_HEIGHT, mask_sh), \
	XFM_SF(VIEWPORT_SIZE, VIEWPORT_WIDTH, mask_sh), \
	XFM_SF(SCL_HORZ_FILTER_SCALE_RATIO, SCL_H_SCALE_RATIO, mask_sh), \
	XFM_SF(SCL_VERT_FILTER_SCALE_RATIO, SCL_V_SCALE_RATIO, mask_sh), \
	XFM_SF(SCL_HORZ_FILTER_INIT, SCL_H_INIT_INT, mask_sh), \
	XFM_SF(SCL_HORZ_FILTER_INIT, SCL_H_INIT_FRAC, mask_sh), \
	XFM_SF(SCL_VERT_FILTER_INIT, SCL_V_INIT_INT, mask_sh), \
	XFM_SF(SCL_VERT_FILTER_INIT, SCL_V_INIT_FRAC, mask_sh), \
	XFM_SF(LB_MEMORY_CTRL, LB_MEMORY_CONFIG, mask_sh), \
	XFM_SF(LB_MEMORY_CTRL, LB_MEMORY_SIZE, mask_sh), \
	XFM_SF(SCL_VERT_FILTER_CONTROL, SCL_V_2TAP_HARDCODE_COEF_EN, mask_sh), \
	XFM_SF(SCL_HORZ_FILTER_CONTROL, SCL_H_2TAP_HARDCODE_COEF_EN, mask_sh), \
	XFM_SF(SCL_UPDATE, SCL_COEF_UPDATE_COMPLETE, mask_sh), \
	XFM_SF(LB_DATA_FORMAT, ALPHA_EN, mask_sh)

#define XFM_COMMON_MASK_SH_LIST_DCE110(mask_sh)\
	XFM_COMMON_MASK_SH_LIST_DCE_COMMON_BASE(mask_sh),\
	XFM_SF(DCFE_MEM_PWR_CTRL, SCL_COEFF_MEM_PWR_DIS, mask_sh), \
	XFM_SF(DCFE_MEM_PWR_STATUS, SCL_COEFF_MEM_PWR_STATE, mask_sh), \
	XFM_SF(SCL_MODE, SCL_PSCL_EN, mask_sh)


struct dce110_transform_shift {
	uint8_t OUT_CLAMP_MIN_B_CB;
	uint8_t OUT_CLAMP_MAX_B_CB;
	uint8_t OUT_CLAMP_MIN_G_Y;
	uint8_t OUT_CLAMP_MAX_G_Y;
	uint8_t OUT_CLAMP_MIN_R_CR;
	uint8_t OUT_CLAMP_MAX_R_CR;
	uint8_t OUT_ROUND_TRUNC_MODE;
	uint8_t DCP_SPATIAL_DITHER_EN;
	uint8_t DCP_SPATIAL_DITHER_MODE;
	uint8_t DCP_SPATIAL_DITHER_DEPTH;
	uint8_t DCP_FRAME_RANDOM_ENABLE;
	uint8_t DCP_RGB_RANDOM_ENABLE;
	uint8_t DCP_HIGHPASS_RANDOM_ENABLE;
	uint8_t DENORM_MODE;
	uint8_t PIXEL_DEPTH;
	uint8_t PIXEL_EXPAN_MODE;
	uint8_t GAMUT_REMAP_C11;
	uint8_t GAMUT_REMAP_C12;
	uint8_t GAMUT_REMAP_C13;
	uint8_t GAMUT_REMAP_C14;
	uint8_t GAMUT_REMAP_C21;
	uint8_t GAMUT_REMAP_C22;
	uint8_t GAMUT_REMAP_C23;
	uint8_t GAMUT_REMAP_C24;
	uint8_t GAMUT_REMAP_C31;
	uint8_t GAMUT_REMAP_C32;
	uint8_t GAMUT_REMAP_C33;
	uint8_t GAMUT_REMAP_C34;
	uint8_t GRPH_GAMUT_REMAP_MODE;
	uint8_t SCL_MODE;
	uint8_t SCL_PSCL_EN;
	uint8_t SCL_H_NUM_OF_TAPS;
	uint8_t SCL_V_NUM_OF_TAPS;
	uint8_t SCL_BOUNDARY_MODE;
	uint8_t EXT_OVERSCAN_LEFT;
	uint8_t EXT_OVERSCAN_RIGHT;
	uint8_t EXT_OVERSCAN_TOP;
	uint8_t EXT_OVERSCAN_BOTTOM;
	uint8_t SCL_COEFF_MEM_PWR_DIS;
	uint8_t SCL_COEFF_MEM_PWR_STATE;
	uint8_t SCL_C_RAM_FILTER_TYPE;
	uint8_t SCL_C_RAM_PHASE;
	uint8_t SCL_C_RAM_TAP_PAIR_IDX;
	uint8_t SCL_C_RAM_EVEN_TAP_COEF_EN;
	uint8_t SCL_C_RAM_EVEN_TAP_COEF;
	uint8_t SCL_C_RAM_ODD_TAP_COEF_EN;
	uint8_t SCL_C_RAM_ODD_TAP_COEF;
	uint8_t VIEWPORT_X_START;
	uint8_t VIEWPORT_Y_START;
	uint8_t VIEWPORT_HEIGHT;
	uint8_t VIEWPORT_WIDTH;
	uint8_t SCL_H_SCALE_RATIO;
	uint8_t SCL_V_SCALE_RATIO;
	uint8_t SCL_H_INIT_INT;
	uint8_t SCL_H_INIT_FRAC;
	uint8_t SCL_V_INIT_INT;
	uint8_t SCL_V_INIT_FRAC;
	uint8_t LB_MEMORY_CONFIG;
	uint8_t LB_MEMORY_SIZE;
	uint8_t SCL_V_2TAP_HARDCODE_COEF_EN;
	uint8_t SCL_H_2TAP_HARDCODE_COEF_EN;
	uint8_t SCL_COEF_UPDATE_COMPLETE;
	uint8_t ALPHA_EN;
};

struct dce110_transform_mask {
	uint32_t OUT_CLAMP_MIN_B_CB;
	uint32_t OUT_CLAMP_MAX_B_CB;
	uint32_t OUT_CLAMP_MIN_G_Y;
	uint32_t OUT_CLAMP_MAX_G_Y;
	uint32_t OUT_CLAMP_MIN_R_CR;
	uint32_t OUT_CLAMP_MAX_R_CR;
	uint32_t OUT_ROUND_TRUNC_MODE;
	uint32_t DCP_SPATIAL_DITHER_EN;
	uint32_t DCP_SPATIAL_DITHER_MODE;
	uint32_t DCP_SPATIAL_DITHER_DEPTH;
	uint32_t DCP_FRAME_RANDOM_ENABLE;
	uint32_t DCP_RGB_RANDOM_ENABLE;
	uint32_t DCP_HIGHPASS_RANDOM_ENABLE;
	uint32_t DENORM_MODE;
	uint32_t PIXEL_DEPTH;
	uint32_t PIXEL_EXPAN_MODE;
	uint32_t GAMUT_REMAP_C11;
	uint32_t GAMUT_REMAP_C12;
	uint32_t GAMUT_REMAP_C13;
	uint32_t GAMUT_REMAP_C14;
	uint32_t GAMUT_REMAP_C21;
	uint32_t GAMUT_REMAP_C22;
	uint32_t GAMUT_REMAP_C23;
	uint32_t GAMUT_REMAP_C24;
	uint32_t GAMUT_REMAP_C31;
	uint32_t GAMUT_REMAP_C32;
	uint32_t GAMUT_REMAP_C33;
	uint32_t GAMUT_REMAP_C34;
	uint32_t GRPH_GAMUT_REMAP_MODE;
	uint32_t SCL_MODE;
	uint32_t SCL_PSCL_EN;
	uint32_t SCL_H_NUM_OF_TAPS;
	uint32_t SCL_V_NUM_OF_TAPS;
	uint32_t SCL_BOUNDARY_MODE;
	uint32_t EXT_OVERSCAN_LEFT;
	uint32_t EXT_OVERSCAN_RIGHT;
	uint32_t EXT_OVERSCAN_TOP;
	uint32_t EXT_OVERSCAN_BOTTOM;
	uint32_t SCL_COEFF_MEM_PWR_DIS;
	uint32_t SCL_COEFF_MEM_PWR_STATE;
	uint32_t SCL_C_RAM_FILTER_TYPE;
	uint32_t SCL_C_RAM_PHASE;
	uint32_t SCL_C_RAM_TAP_PAIR_IDX;
	uint32_t SCL_C_RAM_EVEN_TAP_COEF_EN;
	uint32_t SCL_C_RAM_EVEN_TAP_COEF;
	uint32_t SCL_C_RAM_ODD_TAP_COEF_EN;
	uint32_t SCL_C_RAM_ODD_TAP_COEF;
	uint32_t VIEWPORT_X_START;
	uint32_t VIEWPORT_Y_START;
	uint32_t VIEWPORT_HEIGHT;
	uint32_t VIEWPORT_WIDTH;
	uint32_t SCL_H_SCALE_RATIO;
	uint32_t SCL_V_SCALE_RATIO;
	uint32_t SCL_H_INIT_INT;
	uint32_t SCL_H_INIT_FRAC;
	uint32_t SCL_V_INIT_INT;
	uint32_t SCL_V_INIT_FRAC;
	uint32_t LB_MEMORY_CONFIG;
	uint32_t LB_MEMORY_SIZE;
	uint32_t SCL_V_2TAP_HARDCODE_COEF_EN;
	uint32_t SCL_H_2TAP_HARDCODE_COEF_EN;
	uint32_t SCL_COEF_UPDATE_COMPLETE;
	uint32_t ALPHA_EN;
};

struct dce110_transform_registers {
	uint32_t LB_DATA_FORMAT;
	uint32_t GAMUT_REMAP_CONTROL;
	uint32_t GAMUT_REMAP_C11_C12;
	uint32_t GAMUT_REMAP_C13_C14;
	uint32_t GAMUT_REMAP_C21_C22;
	uint32_t GAMUT_REMAP_C23_C24;
	uint32_t GAMUT_REMAP_C31_C32;
	uint32_t GAMUT_REMAP_C33_C34;
	uint32_t DENORM_CONTROL;
	uint32_t DCP_SPATIAL_DITHER_CNTL;
	uint32_t OUT_ROUND_CONTROL;
	uint32_t OUT_CLAMP_CONTROL_R_CR;
	uint32_t OUT_CLAMP_CONTROL_G_Y;
	uint32_t OUT_CLAMP_CONTROL_B_CB;
	uint32_t SCL_MODE;
	uint32_t SCL_TAP_CONTROL;
	uint32_t SCL_CONTROL;
	uint32_t EXT_OVERSCAN_LEFT_RIGHT;
	uint32_t EXT_OVERSCAN_TOP_BOTTOM;
	uint32_t SCL_VERT_FILTER_CONTROL;
	uint32_t SCL_HORZ_FILTER_CONTROL;
	uint32_t DCFE_MEM_PWR_CTRL;
	uint32_t DCFE_MEM_PWR_STATUS;
	uint32_t SCL_COEF_RAM_SELECT;
	uint32_t SCL_COEF_RAM_TAP_DATA;
	uint32_t VIEWPORT_START;
	uint32_t VIEWPORT_SIZE;
	uint32_t SCL_HORZ_FILTER_SCALE_RATIO;
	uint32_t SCL_VERT_FILTER_SCALE_RATIO;
	uint32_t SCL_HORZ_FILTER_INIT;
	uint32_t SCL_VERT_FILTER_INIT;
	uint32_t SCL_AUTOMATIC_MODE_CONTROL;
	uint32_t LB_MEMORY_CTRL;
	uint32_t SCL_UPDATE;
};
struct dce110_transform_reg_offsets {
	uint32_t scl_offset;
	uint32_t dcfe_offset;
	uint32_t dcp_offset;
	uint32_t lb_offset;
};

struct dce110_transform {
	struct transform base;
	struct dce110_transform_reg_offsets offsets;
	const struct dce110_transform_registers *regs;
	const struct dce110_transform_shift *xfm_shift;
	const struct dce110_transform_mask *xfm_mask;

	const uint16_t *filter_v;
	const uint16_t *filter_h;
	const uint16_t *filter_v_c;
	const uint16_t *filter_h_c;
	uint32_t lb_pixel_depth_supported;
	bool prescaler_on;
};

bool dce110_transform_construct(struct dce110_transform *xfm110,
	struct dc_context *ctx,
	uint32_t inst,
	const struct dce110_transform_registers *regs,
	const struct dce110_transform_shift *xfm_shift,
	const struct dce110_transform_mask *xfm_mask);

void dce110_transform_set_scaler(
	struct transform *xfm,
	const struct scaler_data *data);

bool dce110_transform_get_optimal_number_of_taps(
	struct transform *xfm,
	struct scaler_data *scl_data,
	const struct scaling_taps *in_taps);

#endif
